name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: perpus_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, dom, fileinfo, mysql, gd, zip, redis
          coverage: xdebug

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "CREATE DATABASE IF NOT EXISTS perpus_test;"

      - name: Run Migrations
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: perpus_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan migrate --force

      - name: Run Seeders
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: perpus_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan db:seed --force

      - name: Run Laravel Pint (Code Style)
        run: ./vendor/bin/pint --test

      - name: Run PHPStan (Static Analysis)
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Execute Tests
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: perpus_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan test --coverage --min=80

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t perpus-app:${{ github.sha }} .
          docker tag perpus-app:${{ github.sha }} perpus-app:latest

      - name: Save Docker Image
        run: docker save perpus-app:latest | gzip > perpus-app.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: perpus-app.tar.gz

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Deploy to Production
        run: |
          echo "Deploying to production server..."
          echo "This would typically involve:"
          echo "1. Loading Docker image on production server"
          echo "2. Running database migrations"
          echo "3. Updating running containers"
          echo "4. Health checks"
